scalar DateTimeISO

type Query {
  order(id: ID!): Order!
  consumer(id: ID!): Consumer!
  restaurant(id: ID!): Restaurant!
  ticket(id: ID!): Ticket!
}

type Mutation {
  createRestaurant(r: CreateRestaurantInput!): ID!

  createConsumer(c: ConsumerInfo!): Consumer!

  createOrder(o: CreateOrderInput!): Order!

  acceptTicket(ticketId: ID!, readyBy: DateTimeISO!): ID!

  depositAccount(accountId: ID!, amount: MoneyInput!): Account!
  withdrawAccount(accountId: ID!, amount: MoneyInput!): Account!
}

type Money {
  amount: String!
}

input MoneyInput {
  amount: String!
}

type Consumer {
  id: ID!
  name: String!
  account: Account!
  orders: [Order!]!
}

type Order {
  id: ID!
  lineItems: [OrderLineItem!]!
  consumer: Consumer
  restaurant: Restaurant
  deliveryInfo: DeliveryInfo!
  ticket: Ticket
}

type OrderLineItem {
  quantity: Int!
  menuItemId: String!
  name: String!
  price: Money!
}

input CreateRestaurantInput {
  name: String!
  menuItems: [MenuItemInput!]!
}

input MenuItemInput {
  id: ID!
  name: String!
  price: MoneyInput!
}

type Restaurant {
  id: ID!
  name: String!
  menuItems: [MenuItem!]!
}

type MenuItem {
  id: ID!
  name: String!
  price: Money!
}

type Account {
  id: ID!
  balance: Money!
}

type Ticket {
  id: ID!
  state: TicketState!
  sequence: Int
  lineItems: [TicketLineItem!]!

  readyBy: DateTimeISO
  acceptTime: DateTimeISO
  preparingTime: DateTimeISO
  pickedUpTime: DateTimeISO
  readyForPickupTime: DateTimeISO

  restaurant: Restaurant!
}

type TicketLineItem {
  quantity: Int!
  menuItemId: String!
  name: String!
}

type DeliveryInfo {
  status: DeliveryStatus!
  estimatedDeliveryTime: String
  assignedCourier: String
}

input ConsumerInfo {
  name: String!
}

input CreateOrderInput {
  consumerId: String!
  restaurantId: String!
  lineItems: [MenuItemIdAndQuantity!]!
  deliveryAddress: String!
}

input MenuItemIdAndQuantity {
  menuItemId: String!
  quantity: Int!
}

enum DeliveryStatus {
  PREPARING
  READY_FOR_PICKUP
  PICKED_UP
  DELIVERED
}

enum TicketState {
  CREATE_PENDING
  AWAITING_ACCEPTANCE
  ACCEPTED
  PREPARING
  READY_FOR_PICKUP
  PICKED_UP
  CANCEL_PENDING
  CANCELLED
  REVISION_PENDING
}
